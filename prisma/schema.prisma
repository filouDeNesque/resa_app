// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model Example {
    id        String   @id @default(cuid()) @map("_id")
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model UserPlace {
    id        String @id @default(cuid()) @map("_id")
    name      String
    type      String
    dateAdded String
    id_Api    Int    @unique
    lon       Float
    lat       Float
    userId    String
    user      User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model stabs {
    id              String @id @default(cuid()) @map("_id")
    name            String
    StreetAddress   String
    PostalCode      String
    AddressLocality String
    AddressCountry  String
    Telephone       String
    Site            String
    lon             Float?
    lat             Float?
    place_id        String?
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid()) @map("_id")
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? // @db.Text
    access_token      String? // @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? // @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid()) @map("_id")
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String      @id @default(cuid()) @map("_id")
    name          String?
    email         String?     @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    UserPlace     UserPlace[]
}

model VerificationToken {
    identifier String   @id @default(auto()) @map("_id") @db.ObjectId
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
